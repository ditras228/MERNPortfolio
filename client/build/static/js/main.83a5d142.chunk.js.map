{"version":3,"sources":["types/redux.ts","components/NavBar.tsx","API/index.ts","components/Item.tsx","redux/thunk/index.ts","hooks/useTypedSelector.ts","components/ItemList.tsx","vendor.ts","components/EditInfo.tsx","components/Info.tsx","components/Sidebar.tsx","components/ModalItem.tsx","components/ModalAuth.tsx","App.tsx","redux/reducers/index.ts","index.tsx","components/Dashboard.module.css"],"names":["ReduxActionTypes","NavBar","dispatch","useDispatch","Navbar","bg","variant","sticky","Container","Brand","href","width","height","className","Button","onClick","type","IS_AUTH_MODAL","instance","axios","create","baseURL","indexAPI","data","post","get","headers","Authorization","localStorage","getItem","id","delete","Item","work","isAuth","redirectHandler","key","redirectTo","links","github","demo","window","location","Card","border","style","marginBottom","Body","Title","classes","cardTittle","name","_id","a","response","SET_WORKS","payload","console","log","closeButton","disabled","desc","tags","map","item","marginRight","Text","fontSize","mark","grid","size","useTypedSelector","useSelector","ItemList","works","state","index","paddingTop","IS_MODAL_WORKS","isEmpty","obj","validationSchema","Yup","required","job","workWidthTittle","workWidth","EditInfo","info","contacts","formik","useFormik","initialValues","onSubmit","values","enableReinitialize","useEffect","errors","useState","contactName","setContactName","contactValue","setContactValue","editGrid","FormControl","placeholder","value","onChange","handleChange","Alert","contact","editContact","editContactTittle","contactLine","contactLineRight","REMOVE_CONTACT","deleteContactHandler","e","currentTarget","ADD_CONTACT","marginTop","handleSubmit","Info","src","avatar","alt","social","Sidebar","Nav","activeKey","onSelect","selectedKey","alert","main","yup","require","object","string","ModalItem","marks","editWork","isActive","isWorksModal","split","filter","Modal","show","onHide","Header","li","REMOVE_MARK","removeMarkHandler","ADD_MARK","login","password","ModalAuth","active","isAuthModal","error","status","setItem","IS_AUTH","ADD_ERROR","message","App","responseInfo","responseWorks","SET_INFO","Row","Col","xs","defaultState","link","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.83a5d142.chunk.js","sourcesContent":["export enum ReduxActionTypes{\r\n    SET_INFO='SET_INFO',\r\n    SET_WORKS='SET_WORKS',\r\n    ADD_CONTACT='ADD_CONTACT',\r\n    REMOVE_CONTACT='REMOVE_CONTACT',\r\n    IS_MODAL_WORKS='IS_MODAL_WORKS',\r\n    ADD_MARK='ADD_MARK',\r\n    REMOVE_MARK='REMOVE_MARK',\r\n    IS_AUTH='IS_AUTH',\r\n    IS_AUTH_MODAL='IS_AUTH_MODAL',\r\n    ADD_ERROR='ADD_ERROR',\r\n}\r\ninterface AddError{\r\n    type: ReduxActionTypes.ADD_ERROR,\r\n    payload: any\r\n\r\n}\r\ninterface IsAuthModal{\r\n    type: ReduxActionTypes.IS_AUTH_MODAL,\r\n}\r\ninterface IsAuth{\r\n    type: ReduxActionTypes.IS_AUTH,\r\n}\r\ninterface AddMark{\r\n    type: ReduxActionTypes.ADD_MARK,\r\n    payload: any\r\n}\r\ninterface RemoveMark{\r\n    type: ReduxActionTypes.REMOVE_MARK,\r\n    payload: any\r\n}\r\ninterface ModalWorks{\r\n    type: ReduxActionTypes.IS_MODAL_WORKS\r\n}\r\ninterface SetInfo{\r\n    type: ReduxActionTypes.SET_INFO\r\n    payload: any\r\n}\r\ninterface SetWorks{\r\n    type: ReduxActionTypes.SET_WORKS\r\n    payload: any\r\n}\r\ninterface AddContact{\r\n    type: ReduxActionTypes.ADD_CONTACT\r\n    payload: any\r\n}\r\ninterface RemoveContact{\r\n    type: ReduxActionTypes.REMOVE_CONTACT\r\n    payload: any\r\n}\r\nexport type ReduxActions =\r\n      SetInfo\r\n    | SetWorks\r\n    | AddContact\r\n    | RemoveContact\r\n    | ModalWorks\r\n    | AddMark\r\n    | RemoveMark\r\n    | IsAuth\r\n    | IsAuthModal\r\n    | AddError","import * as React from 'react'\r\nimport {Button, Container, Navbar} from 'react-bootstrap'\r\nimport {Layers} from 'react-bootstrap-icons'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ReduxActionTypes} from '../types/redux'\r\n\r\nconst NavBar = () => {\r\n    const dispatch=useDispatch()\r\n    const authHandler=()=>{\r\n        dispatch({type: ReduxActionTypes.IS_AUTH_MODAL})\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky={'top'}>\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <Layers\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                            MERNPortfolio\r\n                    </Navbar.Brand>\r\n                    <Button onClick={authHandler}>Войти</Button>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar","import axios from 'axios'\r\nexport const baseURL= 'http://87.236.22.121:5000/'\r\nexport const instance = axios.create({\r\n    baseURL: baseURL\r\n})\r\n\r\nexport const indexAPI={\r\n    auth(data: any){\r\n        return instance.post('/auth', data)\r\n    },\r\n    getInfo(){\r\n        return instance.get('/')\r\n    },\r\n    getWorks(){\r\n        return instance.get('/works')\r\n    },\r\n    updateInfo(data: any){\r\n        return instance.post('/info', data, {headers: {Authorization: localStorage.getItem('token')}})\r\n    },\r\n    addWork(data: any){\r\n        return instance.post('/works', data, {headers: {Authorization: localStorage.getItem('token')}})\r\n    },\r\n    deleteWork(id: string){\r\n        return instance.delete(`/works?id=${id}`, {headers: {Authorization: localStorage.getItem('token')}})\r\n    }\r\n}","import * as React from 'react'\r\nimport {Button, Card} from 'react-bootstrap'\r\nimport {Dice2, Github} from 'react-bootstrap-icons'\r\nimport   classes from './Dashboard.module.css'\r\nimport {IWork} from '../redux/reducers'\r\nimport {indexAPI} from '../API'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deleteWork} from '../redux/thunk'\r\ntype props={\r\n    work: IWork,\r\n    isAuth:boolean\r\n}\r\nconst Item = ({work, isAuth}: props) => {\r\n    const dispatch=useDispatch()\r\n    const redirectHandler=(key:string)=>{\r\n        let redirectTo=''\r\n        key==='github'\r\n            ?redirectTo= work.links.github\r\n            :redirectTo= work.links.demo\r\n        window.location.href=redirectTo\r\n    }\r\n    const deleteHandler=()=>{\r\n        dispatch(deleteWork(work._id))\r\n    }\r\n    return (\r\n        <Card  border=\"success\" style={{marginBottom: 10}}>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <div className={classes.cardTittle}><h3>{work.name}</h3><Button onClick={deleteHandler} className={classes.closeButton} disabled={!isAuth}>X</Button>\r\n                    </div>\r\n                </Card.Title>\r\n                <Card.Title style={{marginBottom: 20}}><h5>{work.desc}</h5></Card.Title>\r\n                {\r\n                    work.tags.map(item=>(\r\n                        <Button disabled={true} style={{marginRight: 10}}>{item}</Button>\r\n                    ))\r\n                }\r\n                <hr/>\r\n\r\n                <Card.Text>\r\n                    <div  style={{fontSize:18}}>\r\n                        <ul>\r\n                            {work.mark.map(mark=>(\r\n                                <li>{mark}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </Card.Text>\r\n                <div>\r\n                             <hr/>\r\n\r\n                </div>\r\n                    <div className={classes.grid}>\r\n                        <Button onClick={()=>redirectHandler('demo')} variant=\"primary\" size=\"lg\" className={classes.item}>\r\n                           <Dice2/> Демо\r\n                        </Button>\r\n                        <Button onClick={()=>redirectHandler('github')} variant=\"secondary\" size=\"lg\" className={classes.item}>\r\n                           <Github/> Github\r\n                        </Button>\r\n                    </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Item","import {ReduxActionTypes} from '../../types/redux'\r\nimport {indexAPI} from '../../API'\r\n\r\nexport const get=()=>{\r\n    return async (dispatch: any)=>{\r\n        try{\r\n            const responseInfo = await indexAPI.getInfo()\r\n            const responseWorks = await indexAPI.getWorks()\r\n            dispatch(\r\n                {type: ReduxActionTypes.SET_INFO,\r\n                payload: responseInfo.data\r\n                })\r\n            dispatch(\r\n                {type: ReduxActionTypes.SET_WORKS,\r\n                    payload: responseWorks.data\r\n                })\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addWork=(data: any)=>{\r\n    return async (dispatch: any)=>{\r\n        try{\r\n            const response = await indexAPI.addWork(data)\r\n            dispatch(\r\n                {type: ReduxActionTypes.SET_WORKS,\r\n                    payload: response.data\r\n                })\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteWork=(id: string)=>{\r\n    return async (dispatch: any)=>{\r\n        try{\r\n            const response = await indexAPI.deleteWork(id)\r\n            dispatch(\r\n                {type: ReduxActionTypes.SET_WORKS,\r\n                    payload: response.data\r\n                })\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const auth=(data: any)=>{\r\n    return async (dispatch: any)=>{\r\n        try{\r\n            const response = await indexAPI.auth(data)\r\n            if(response.status!==400){\r\n                localStorage.setItem('token', response.data)\r\n                dispatch({type: ReduxActionTypes.IS_AUTH})\r\n                dispatch({type: ReduxActionTypes.IS_AUTH_MODAL})\r\n            }else{\r\n                dispatch({\r\n                    type: ReduxActionTypes.ADD_ERROR,\r\n                    payload: {name: 'auth', value: response.data.message}\r\n                })\r\n            }\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n}","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport {RootState} from '../redux/reducers'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import React, {useEffect} from 'react'\r\nimport {Button, Container} from 'react-bootstrap'\r\nimport Item from './Item'\r\nimport EditItem from './EditItem'\r\nimport {ReduxActionTypes} from '../types/redux'\r\nimport {useDispatch} from 'react-redux'\r\nimport {indexAPI} from '../API'\r\nimport {useTypedSelector} from '../hooks/useTypedSelector'\r\nimport {IWork} from '../redux/reducers'\r\n\r\nconst ItemList = ({isAuth}: any) => {\r\n    const dispatch = useDispatch()\r\n    const openHandler=()=>{\r\n        dispatch({\r\n            type: ReduxActionTypes.IS_MODAL_WORKS\r\n        })\r\n    }\r\n    const works=useTypedSelector(state=>state.index.works)\r\n    return (\r\n        <Container style={{paddingTop: 30}}>\r\n            <Button disabled={!isAuth} onClick={openHandler} style={{width: '100%', marginBottom: '20px'}}>Добавить</Button>\r\n            {\r\n                works.map((work: IWork)=>(\r\n                    <Item isAuth={isAuth} key={work._id} work={work}/>\r\n                ))\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ItemList","export const isEmpty = (obj: any) => {\r\n    for (let key in obj) {\r\n        // если тело цикла начнет выполняться - значит в объекте есть свойства\r\n        return false\r\n    }\r\n    return true\r\n}","import React, {useEffect, useState} from 'react'\r\nimport classes from './Dashboard.module.css'\r\nimport {Alert, Button, Card, Col, Container, FormControl, Row} from 'react-bootstrap'\r\nimport {Grid} from 'react-bootstrap-icons'\r\nimport {useFormik} from 'formik'\r\nimport {indexAPI} from '../API'\r\nimport * as Yup from 'yup'\r\nimport Contact from './Contact'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ReduxActionTypes} from '../types/redux'\r\nimport {useTypedSelector} from '../hooks/useTypedSelector'\r\nimport {IInfo} from '../redux/reducers'\r\nimport {isEmpty} from '../vendor'\r\n\r\ntype props = {\r\n    info: IInfo\r\n}\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required('Обязательно'),\r\n    job: Yup.string().required('Обязательно'),\r\n    desc: Yup.string().required('Обязательно'),\r\n    workWidthTittle: Yup.string().required('Обязательно'),\r\n    workWidth: Yup.string().required('Обязательно'),\r\n})\r\nconst EditInfo = ({info}: props) => {\r\n    const contacts = useTypedSelector(state => state.index.info)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: info.name,\r\n            job: info.job,\r\n            desc: info.desc,\r\n            workWidthTittle: info.workWidthTittle,\r\n            workWidth: info.workWidth,\r\n            contacts: info.contacts,\r\n\r\n        },\r\n        onSubmit: async values => {\r\n            await indexAPI.updateInfo({...values, contacts: contacts.contacts})\r\n        },\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(formik.errors)\r\n    }, [formik.errors])\r\n    const dispatch = useDispatch()\r\n    const [contactName, setContactName] = useState('')\r\n    const [contactValue, setContactValue] = useState('')\r\n    const addContactHandler = () => {\r\n        dispatch({\r\n            type: ReduxActionTypes.ADD_CONTACT,\r\n            payload: {key: contactName, value: contactValue}\r\n        })\r\n    }\r\n    const deleteContactHandler = (contact: any) => {\r\n        dispatch({\r\n            type: ReduxActionTypes.REMOVE_CONTACT,\r\n            payload: contact\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.editGrid}>\r\n\r\n                <FormControl\r\n                    placeholder=\"Имя\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'name'}\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n\r\n                />\r\n                <FormControl\r\n                    placeholder=\"Профессия\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'job'}\r\n                    value={formik.values.job}\r\n                    onChange={formik.handleChange}\r\n\r\n                />\r\n                <FormControl\r\n                    placeholder=\"Обо мне\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'desc'}\r\n                    value={formik.values.desc}\r\n                    onChange={formik.handleChange}\r\n\r\n                />\r\n                <FormControl\r\n                    placeholder=\"Опыт работы\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'workWidthTittle'}\r\n                    value={formik.values.workWidthTittle}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <FormControl\r\n                    placeholder=\"Библиотеки\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'workWidth'}\r\n                    value={formik.values.workWidth}\r\n                    onChange={formik.handleChange}\r\n                />\r\n            </div>\r\n\r\n\r\n            {\r\n                !isEmpty(formik.errors) ? <Alert variant={'danger'}>Не все поля заполнены</Alert> : <></>\r\n            }\r\n            <div>\r\n\r\n<hr/>\r\n                {\r\n                    contacts.contacts &&\r\n                    contacts.contacts.map((contact: any) => {\r\n                        return <div key={contact.key} className={classes.editContact}>\r\n                            <div>\r\n                                <div className={classes.editContactTittle}>\r\n                                    <div className={classes.contactLine}>\r\n                                        <div>\r\n                                            key\r\n                                        </div>\r\n                                        <div className={classes.contactLineRight}>\r\n                                            {contact.key}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className={classes.contactLine}>\r\n                                    <div>\r\n                                        value\r\n                                    </div>\r\n                                    <div className={classes.contactLineRight}>\r\n                                        {contact.value}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button onClick={() => deleteContactHandler(contact)}\r\n                                    className={classes.closeButton}>X</Button>\r\n\r\n\r\n                        </div>\r\n\r\n                    })\r\n                }\r\n                <div className={classes.editGrid}>\r\n\r\n                    <FormControl\r\n                        placeholder=\"Тип контакта\"\r\n                        aria-label=\"Recipient's username\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        name={'contactsName'}\r\n                        value={contactName}\r\n                        onChange={(e: any) => setContactName(e.currentTarget.value)}\r\n                    />\r\n                    <FormControl\r\n                        placeholder=\"Значение\"\r\n                        aria-label=\"Recipient's username\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        name={'contactValue'}\r\n                        value={contactValue}\r\n                        onChange={(e: any) => setContactValue(e.currentTarget.value)}\r\n                    />\r\n                </div>\r\n\r\n                <Button onClick={() => addContactHandler()} style={{width: '100%', marginTop: 5}}>Добавить\r\n                    новый</Button>\r\n                <hr/>\r\n                <Button onClick={() => formik.handleSubmit()} style={{width: '100%'}}>Сохранить</Button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditInfo","import React from 'react'\r\nimport classes from './Dashboard.module.css'\r\nimport {IInfo} from '../redux/reducers'\r\ntype props = {\r\n    info: IInfo\r\n}\r\nconst Info = ({info} : props) => {\r\n    return (\r\n        <>\r\n            <img src=\"https://avatars.githubusercontent.com/u/78543687?s=400&u=78895e08cc6d10f51e57f60053262620138813f0&v=4\" className={classes.avatar} alt=\"\"/>\r\n            <div>\r\n                <h3>{info.name}</h3>\r\n                <h5>{info.job}</h5>\r\n            </div>\r\n            <div>\r\n                {info.desc}<br/>\r\n            </div>\r\n            <div>\r\n                {info.workWidthTittle}<br/>\r\n                {info.workWidth}<br/>\r\n            </div>\r\n            {info.contacts?.map(contact=>(\r\n                <div className={classes.social}>\r\n                    <div>{contact.key}:</div><div>{contact.value}</div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Info","import React from \"react\";\r\nimport {Badge, Nav} from 'react-bootstrap'\r\nimport classes from './Dashboard.module.css'\r\nimport {useSelector} from 'react-redux'\r\nimport {useTypedSelector} from '../hooks/useTypedSelector'\r\nimport EditInfo from './EditInfo'\r\nimport Info from './Info'\r\n\r\nconst Sidebar: React.FC<any> = ({isAuth}) => {\r\n    const info = useTypedSelector(state => state.index.info)\r\n    return (\r\n        <>\r\n\r\n            <Nav className=\"col-md-12 d-none d-md-block bg-light sidebar\"\r\n                 activeKey=\"/home\"\r\n                 onSelect={selectedKey => alert(`selected ${selectedKey}`)}\r\n\r\n            >\r\n                <div className={classes.main}>\r\n                    {\r\n                        isAuth\r\n                            ?<EditInfo info={info}/>\r\n                            :<Info info={info}/>\r\n\r\n                    }\r\n                </div>\r\n\r\n            </Nav>\r\n\r\n        </>\r\n    );\r\n};\r\n//const Sidebar = withRouter(Side);\r\nexport default Sidebar","import React, {useEffect} from 'react'\r\nimport {Alert, Button, Card, FormControl, Modal} from 'react-bootstrap'\r\nimport classes from './Dashboard.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ReduxActionTypes} from '../types/redux'\r\nimport {useTypedSelector} from '../hooks/useTypedSelector'\r\nimport {useFormik} from 'formik'\r\nimport {indexAPI} from '../API'\r\nimport {isEmpty} from '../vendor'\r\nimport {addWork} from '../redux/thunk'\r\nconst yup=require('yup')\r\nconst validationSchema=yup.object({\r\n    name: yup.string().required(),\r\n    desc: yup.string().required(),\r\n    tags: yup.string().required(),\r\n    github: yup.string().required(),\r\n    demo: yup.string().required(),\r\n})\r\nconst ModalItem = () => {\r\n    const dispatch = useDispatch()\r\n    const marks=useTypedSelector(state=>state.index.editWork.mark)\r\n    const isActive=useTypedSelector(state=>state.index.isWorksModal)\r\n    const closeHandler=()=>{\r\n        dispatch({\r\n            type: ReduxActionTypes.IS_MODAL_WORKS\r\n        })\r\n    }\r\n    const addMarkHandler=()=>{\r\n        dispatch({\r\n            type: ReduxActionTypes.ADD_MARK,\r\n            payload: formik.values.mark\r\n        })\r\n    }\r\n\r\n    const removeMarkHandler=(mark:any)=>{\r\n        dispatch({\r\n            type: ReduxActionTypes.REMOVE_MARK,\r\n            payload: mark\r\n        })\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            name: '',\r\n            desc: '',\r\n            tags: '',\r\n            mark: '',\r\n            github: '',\r\n            demo: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: values =>{\r\n            dispatch(addWork({...values, mark: marks,links:{github: formik.values.github, demo: formik.values.demo}, tags: formik.values.tags.split(' ').filter(value=>value!=='')}))\r\n        }\r\n    })\r\n    useEffect(()=>{\r\n        console.log(marks)\r\n    },[marks])\r\n    return (\r\n        <Modal show={isActive} onHide={closeHandler}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Создать работу\r\n                </Modal.Title>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card  border=\"danger\" >\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                <FormControl\r\n                                    placeholder=\"Название\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                    name={'name'}\r\n                                    value={formik.values.name}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            </Card.Title>\r\n                            <Card.Title style={{marginBottom: 20}}>\r\n                                <FormControl\r\n                                    placeholder=\"Тип\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                    name={'desc'}\r\n                                    value={formik.values.desc}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            </Card.Title>\r\n                            <FormControl\r\n                                placeholder=\"#Теги\"\r\n                                aria-label=\"Recipient's username\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                name={'tags'}\r\n                                value={formik.values.tags}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            <hr/>\r\n                            {marks && marks.map(mark=>(\r\n                                <div className={classes.li}><li>{mark}</li>\r\n                                    <Button  onClick={()=>removeMarkHandler(mark)}   className={classes.closeButton}>X</Button>\r\n                                </div>\r\n                            ))}\r\n                            <Card.Text>\r\n                                <div  style={{fontSize:18}}>\r\n                                            <FormControl\r\n                                                placeholder=\"Маркер\"\r\n                                                aria-label=\"Recipient's username\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                name={'mark'}\r\n                                                value={formik.values.mark}\r\n                                                onChange={formik.handleChange}\r\n                                            />\r\n                                            <Button onClick={addMarkHandler} style={{width:'100%', marginTop: 10   }}>Добавить</Button>\r\n                                </div>\r\n\r\n                            </Card.Text>\r\n                            <div>\r\n                                <hr/>\r\n\r\n                            </div>\r\n                            <div className={classes.grid}>\r\n                                <FormControl\r\n                                    placeholder=\"Ссылка на демо\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                    name={'demo'}\r\n                                    value={formik.values.demo}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                <FormControl\r\n                                    placeholder=\"Ссылка не GitHub\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                    name={'github'}\r\n                                    value={formik.values.github}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            </div>\r\n                            {\r\n                               !isEmpty(formik.errors) ? <Alert variant={'danger'} style={{marginTop: 10}}>Не все поля заполнены</Alert> : <></>\r\n                            }\r\n                            <hr/>\r\n                            <Button style={{width: '100%'}} onClick={()=>formik.handleSubmit()}>Опубликовать</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Modal.Body>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalItem","import React from 'react'\r\nimport {Alert, Button, FormControl, Modal} from 'react-bootstrap'\r\nimport {useFormik} from 'formik'\r\nimport classes from './Dashboard.module.css'\r\nimport * as  yup from 'yup'\r\nimport {isEmpty} from '../vendor'\r\nimport {useDispatch} from 'react-redux'\r\nimport {auth} from '../redux/thunk'\r\nimport {useTypedSelector} from '../hooks/useTypedSelector'\r\nimport {ReduxActionTypes} from '../types/redux'\r\nconst validationSchema = yup.object({\r\n    login: yup.string().required(),\r\n    password: yup.string().required(),\r\n})\r\n\r\nconst ModalAuth = () => {\r\n    const active = useTypedSelector(state=>state.index.isAuthModal)\r\n    const error = useTypedSelector(state=>state.index.errors).filter((error:any)=>error.name!=='auth')[0]\r\n    const dispatch=useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            login: '',\r\n            password: ''\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(auth(values))\r\n        },\r\n        validationSchema: validationSchema\r\n    })\r\n    const closeHandler=()=>{\r\n        dispatch({type: ReduxActionTypes.IS_AUTH_MODAL})\r\n    }\r\n    return (\r\n        <Modal show={active} onHide={closeHandler}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Вход</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className={classes.editGrid}>\r\n                <FormControl\r\n                    placeholder=\"Логин\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'login'}\r\n                    value={formik.values.login}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <FormControl\r\n                    placeholder=\"Пороль\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name={'password'}\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    type={'password'}\r\n                />\r\n                {!isEmpty(formik.errors) && <Alert variant={'danger'}>Не все поля заполнены</Alert>}\r\n                {!isEmpty(error) && <Alert variant={'danger'}>{error.value}</Alert>}\r\n                <Button style={{width: '100%'}} onClick={()=>   formik.handleSubmit()}>Войти</Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalAuth","import * as React from 'react'\nimport NavBar from './components/NavBar'\nimport ItemList from './components/ItemList'\nimport Sidebar from './components/Sidebar'\nimport {Col, Container, Row} from 'react-bootstrap'\nimport './components/Dashboard.module.css'\nimport {useDispatch} from 'react-redux'\nimport {useEffect} from 'react'\nimport {get} from './redux/thunk'\nimport ModalItem from './components/ModalItem'\nimport {useTypedSelector} from './hooks/useTypedSelector'\nimport ModalAuth from './components/ModalAuth'\n\nfunction App() {\n    const isAuth = useTypedSelector(state => state.index.isAuth)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(get())\n    }, [])\n    return (\n        <>\n            <NavBar/>\n            <Container>\n                <Row style={{width: '100%'}}>\n                    <Col xs={3} id=\"sidebar-wrapper\">\n                        <Sidebar isAuth={isAuth}/>\n                    </Col>\n                    <Col xs={9} id=\"page-content-wrapper\">\n                        <ItemList isAuth={isAuth}/>\n                    </Col>\n                </Row>\n\n            </Container>\n            <ModalItem/>\n            <ModalAuth/>\n        </>\n    )\n}\n\nexport default App\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport {ReduxActions, ReduxActionTypes} from '../../types/redux'\r\n\r\nconst defaultState={\r\n    isAuth: false,\r\n    info: {} as IInfo,\r\n    works: [] as unknown as IWork,\r\n    isWorksModal: false,\r\n    isAuthModal: false,\r\n    editWork: {mark: [], link:{github: '', demo:''}} as unknown as IWork,\r\n    errors: [] as unknown as Array<any>,\r\n}\r\nexport type IWork={\r\n    _id: string,\r\n    name:string,\r\n    desc:string,\r\n    tags: Array<any>\r\n    mark: Array<any>\r\n    links: {github: any, demo: any}\r\n}\r\nexport type IInfo={\r\n    name: string,\r\n    job: string,\r\n    desc: string,\r\n    workWidth: string,\r\n    workWidthTittle: string,\r\n    contacts: Array<any>\r\n}\r\nexport default function  indexReducer(state=defaultState, action: ReduxActions){\r\n    switch (action.type){\r\n        case ReduxActionTypes.IS_AUTH:\r\n            return {...state, isAuth: !state.isAuth}\r\n        case ReduxActionTypes.SET_INFO:\r\n            return {...state, info: action.payload}\r\n        case ReduxActionTypes.ADD_CONTACT:\r\n            return {...state, info: {...state.info,\r\n                    contacts: [...state.info.contacts, {key: action.payload.key, value: action.payload.value}]}}\r\n        case ReduxActionTypes.ADD_MARK:\r\n            return {...state, editWork: {...state.editWork,\r\n                    mark: [...state.editWork.mark, action.payload]}}\r\n        case ReduxActionTypes.REMOVE_MARK:\r\n            return {...state, editWork: {...state.editWork,\r\n                    mark: [...state.editWork.mark.filter(mark=>mark!==action.payload)]}}\r\n        case ReduxActionTypes.REMOVE_CONTACT:\r\n            return {...state, info: {...state.info,\r\n                    contacts: [...state.info.contacts.filter(contact=>contact!==action.payload)]}}\r\n        case ReduxActionTypes.SET_WORKS:\r\n            return {...state, works: action.payload}\r\n        case ReduxActionTypes.IS_MODAL_WORKS:\r\n            return {...state, isWorksModal: !state.isWorksModal}\r\n        case ReduxActionTypes.IS_AUTH_MODAL:\r\n            return {...state, isAuthModal: !state.isAuthModal}\r\n        case ReduxActionTypes.ADD_ERROR:\r\n            return {...state, errors: [...state.errors, action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    index: indexReducer\r\n})\r\nexport const store=createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Provider} from 'react-redux'\nimport {store} from './redux/reducers'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    ,\n    document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Dashboard_sidebar__398nS\",\"sidebar-wrapper\":\"Dashboard_sidebar-wrapper__1uv-G\",\"sidebar-heading\":\"Dashboard_sidebar-heading__3W6zN\",\"page-content-wrapper\":\"Dashboard_page-content-wrapper__3TbfF\",\"avatar\":\"Dashboard_avatar__3Fsr6\",\"main\":\"Dashboard_main__3Ds0w\",\"social\":\"Dashboard_social__2IZLt\",\"grid\":\"Dashboard_grid__35h6j\",\"item\":\"Dashboard_item__3eytN\",\"editContact\":\"Dashboard_editContact__wsvYg\",\"editContactTittle\":\"Dashboard_editContactTittle__1h-Pu\",\"closeButton\":\"Dashboard_closeButton__245Ow\",\"contactLineRight\":\"Dashboard_contactLineRight__3mG_Q\",\"contactLine\":\"Dashboard_contactLine__3C_TV\",\"editGrid\":\"Dashboard_editGrid__14RV1\",\"multipleLines\":\"Dashboard_multipleLines__3J_uv\",\"li\":\"Dashboard_li__1LTyX\",\"cardTittle\":\"Dashboard_cardTittle__1Uq_Y\"};"],"sourceRoot":""}