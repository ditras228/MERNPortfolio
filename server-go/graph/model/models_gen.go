// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type ServiceErrorInterface interface {
	IsServiceErrorInterface()
}

type UserOutput interface {
	IsUserOutput()
}

type Contacts struct {
	Telegram string `json:"telegram"`
	Github   string `json:"github"`
}

type DeleteWorkInput struct {
	ID int `json:"id"`
}

type GetInfo struct {
	Name       string    `json:"name"`
	Job        string    `json:"job"`
	Desc       string    `json:"desc"`
	Experience string    `json:"experience"`
	Contacts   *Contacts `json:"contacts"`
}

type GetTag struct {
	ID    int    `json:"id"`
	Title string `json:"title"`
}

type GetWork struct {
	ID          int       `json:"id"`
	Name        string    `json:"name"`
	Tags        []*GetTag `json:"tags"`
	Description string    `json:"description"`
	Github      *string   `json:"github"`
	Demo        string    `json:"demo"`
	Figma       string    `json:"figma"`
}

type GetWorkTag struct {
	ID     int `json:"id"`
	WorkID int `json:"workId"`
	TagID  int `json:"tagId"`
}

type NotFoundError struct {
	Message string `json:"message"`
}

func (NotFoundError) IsServiceErrorInterface() {}
func (NotFoundError) IsUserOutput()            {}

type UpdateInfo struct {
	Name       string `json:"name"`
	Job        string `json:"job"`
	Desc       string `json:"desc"`
	Experience string `json:"experience"`
	Telegram   string `json:"telegram"`
	Github     string `json:"github"`
}

type UpdateWorkInput struct {
	ID          int     `json:"id"`
	Name        string  `json:"name"`
	Tags        []*int  `json:"tags"`
	Description string  `json:"description"`
	Github      *string `json:"github"`
	Demo        string  `json:"demo"`
	Figma       string  `json:"figma"`
}

type User struct {
	ID          int    `json:"id"`
	Login       string `json:"login"`
	Password    string `json:"password"`
	AccessToken string `json:"accessToken"`
}

func (User) IsUserOutput() {}

type UserInput struct {
	Login    string `json:"login"`
	Password string `json:"password"`
}

type WrongPassword struct {
	Message string `json:"message"`
}

func (WrongPassword) IsServiceErrorInterface() {}
func (WrongPassword) IsUserOutput()            {}
