// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CreateDescOutput interface {
	IsCreateDescOutput()
}

type DeleteDescOutput interface {
	IsDeleteDescOutput()
}

type DeleteWorkOutput interface {
	IsDeleteWorkOutput()
}

type GetDescOutput interface {
	IsGetDescOutput()
}

type ServiceErrorInterface interface {
	IsServiceErrorInterface()
}

type UpdateDescOutput interface {
	IsUpdateDescOutput()
}

type UpdateWorkOutput interface {
	IsUpdateWorkOutput()
}

type UserOutput interface {
	IsUserOutput()
}

type Contacts struct {
	TelegramTitle string `json:"telegramTitle"`
	TelegramLink  string `json:"telegramLink"`
	GithubTitle   string `json:"githubTitle"`
	GithubLink    string `json:"githubLink"`
}

type CreateDescInput struct {
	Text   string `json:"text"`
	ImgURL string `json:"imgURL"`
}

type DeleteDescInput struct {
	ID int `json:"id"`
}

type DeleteWorkInput struct {
	ID int `json:"id"`
}

type DeleteWorkResult struct {
	ID int `json:"id"`
}

func (DeleteWorkResult) IsDeleteWorkOutput() {}

type GetDesc struct {
	ID     int    `json:"id"`
	Text   string `json:"text"`
	ImgURL string `json:"imgURL"`
}

func (GetDesc) IsDeleteDescOutput() {}
func (GetDesc) IsUpdateDescOutput() {}
func (GetDesc) IsCreateDescOutput() {}

type GetDescResult struct {
	Desc []*GetDesc `json:"desc"`
}

func (GetDescResult) IsGetDescOutput() {}

type GetInfo struct {
	Name       string     `json:"name"`
	Job        string     `json:"job"`
	Desc       []*GetDesc `json:"desc"`
	Experience string     `json:"experience"`
	Contacts   *Contacts  `json:"contacts"`
}

type GetTag struct {
	ID    int    `json:"id"`
	Title string `json:"title"`
}

type GetWork struct {
	ID          int       `json:"id"`
	Name        string    `json:"name"`
	Tags        []*GetTag `json:"tags"`
	Description string    `json:"description"`
	Github      *string   `json:"github"`
	Demo        string    `json:"demo"`
	Figma       string    `json:"figma"`
}

func (GetWork) IsUpdateWorkOutput() {}

type GetWorkTag struct {
	ID     int `json:"id"`
	WorkID int `json:"workId"`
	TagID  int `json:"tagId"`
}

type NotFoundError struct {
	Message string `json:"message"`
}

func (NotFoundError) IsUpdateWorkOutput()      {}
func (NotFoundError) IsDeleteWorkOutput()      {}
func (NotFoundError) IsServiceErrorInterface() {}
func (NotFoundError) IsUserOutput()            {}
func (NotFoundError) IsDeleteDescOutput()      {}
func (NotFoundError) IsUpdateDescOutput()      {}
func (NotFoundError) IsGetDescOutput()         {}

type UnexpectedError struct {
	Message string `json:"message"`
}

func (UnexpectedError) IsUpdateWorkOutput()      {}
func (UnexpectedError) IsDeleteWorkOutput()      {}
func (UnexpectedError) IsServiceErrorInterface() {}
func (UnexpectedError) IsDeleteDescOutput()      {}
func (UnexpectedError) IsUpdateDescOutput()      {}
func (UnexpectedError) IsCreateDescOutput()      {}
func (UnexpectedError) IsGetDescOutput()         {}

type UpdateDescInput struct {
	ID     int    `json:"id"`
	Text   string `json:"text"`
	ImgURL string `json:"imgURL"`
}

type UpdateInfoInput struct {
	Name          string `json:"name"`
	Job           string `json:"job"`
	Experience    string `json:"experience"`
	TelegramTitle string `json:"telegramTitle"`
	TelegramLink  string `json:"telegramLink"`
	GithubTitle   string `json:"githubTitle"`
	GithubLink    string `json:"githubLink"`
}

type UpdateWorkInput struct {
	ID          int     `json:"id"`
	Name        string  `json:"name"`
	Tags        []*int  `json:"tags"`
	Description string  `json:"description"`
	Github      *string `json:"github"`
	Demo        string  `json:"demo"`
	Figma       string  `json:"figma"`
}

type User struct {
	ID          int    `json:"id"`
	Login       string `json:"login"`
	Password    string `json:"password"`
	AccessToken string `json:"accessToken"`
}

func (User) IsUserOutput() {}

type UserInput struct {
	Login    string `json:"login"`
	Password string `json:"password"`
}

type WrongPassword struct {
	Message string `json:"message"`
}

func (WrongPassword) IsServiceErrorInterface() {}
func (WrongPassword) IsUserOutput()            {}
